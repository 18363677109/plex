#*********************************************************************
# content = software data
# version = 0.1.0
# date    = 2017-08-01

# author  = Alexander Richter <pipeline@richteralexander.com>
#*********************************************************************


#*****************************************************************************************************************************
# MAYA
MAYA:
  version: &MAYA_VERSION 2016
  path:    &MAYA_PATH !join ["C:/Program Files/Autodesk/Maya", *MAYA_VERSION, /bin/maya.exe]

  # start command
  start: !join ['start "" "', *MAYA_PATH, '" -file "{}"'] # {} replaced by open_file

  renderer:
  renderer_path:


  ENV: # Added BEFORE software start
    PYTHONPATH:
      - !env_first [SOFTWARE_PATH]
      - !env_first [SOFTWARE_PATH, /scripts]
      - !env_first [SOFTWARE_PATH, /plugins]
      - !env_first [SOFTWARE_PATH, /shelf]

    MAYA_SCRIPT_PATH: #[SOFTWARE_PATH, /scripts]

    MAYA_PLUG_IN_PATH:
      - !env_first [SOFTWARE_PATH, /plugins]

    MAYA_SHELF_PATH:
      - !env_first [SOFTWARE_PATH, /shelf]

    # SPLASHSCREEN & IMG PATH
    XBMLANGPATH:
      - !env [IMG_PATH, /software/maya]
      - !env [IMG_PATH, /software/maya/shelf]

    # DISABLE close reports
    MAYA_DISABLE_CIP: 1
    MAYA_DISABLE_CER: 1


  MENU:

    - Plex:
        open_scene_folder:   menuItem(p="{}", l='Open Scene Folder', c='import libFileFolder; libFileFolder.open_folder(cmds.file(q=True, sceneName=True))')
        open_project_folder: menuItem(p="{}", l='Open Project Folder', c='import libFileFolder;import libData; libFileFolder.open_folder(libData.get_data("project")["path"])')

    - break:  menuItem(p="{}", d=True)

    # - Save: menuItem(p="{}", l='Save', c='from util import arSave; reload(arSave); arSave.main()')
    # - Load: menuItem(p="{}", l='Load', c='from util import arSaveAs; reload(arSaveAs); arSaveAs.main(True)')

    # - break:  menuItem(p="{}", d=True)

    - Utils:
        position_selected: menuItem(p="{}", l='Position to First Selection', c='import maya_utils; maya_utils.position_selected()')

    - break:  menuItem(p="{}", d=True)

    - Report: menuItem(p="{}", l='Report', c='import libFunc; libFunc.get_help("issues")')
    - Help:   menuItem(p="{}", l='Help', c='import libFunc; libFunc.get_help()')


  # SPECIFIC settings
  SETTINGS:
    FPS:
      24: film
      25: pal
      30: ntsc
      48: show
      50: palf
      60: ntscf

    unit: cm



#*****************************************************************************************************************************
# NUKE
NUKE:
  version:      &NUKE_VERSION 10.5
  version_long: &NUKE_VERSION_LONG !join [*NUKE_VERSION, v1]

  start: !join ['start "" Nuke', *NUKE_VERSION ,'.exe --nukex "{}"']

  path: !join ["C:/Program Files/Nuke", *NUKE_VERSION_LONG,/Nuke, *NUKE_VERSION, .exe]


  ENV:
    PYTHONPATH:
      - !env_first [SOFTWARE_PATH, /scripts]
      - !env_first [SOFTWARE_PATH, /plugins]
      - !env_first [SOFTWARE_PATH, /gizmos]

    NUKE_PATH:
      - !env [PIPELINE_PATH]
      - !env [SOFTWARE_PATH]
      # - STATUS_PATH
      # - PLUGIN_PATH

    # Init & Menu
    NUKE_INIT_PATH: !env_first [SOFTWARE_PATH]
    NUKE_MENU_PATH: !env_first [SOFTWARE_PATH]

    NUKE_DIR: &NUKE_DIR !join ["C:/Program Files/Nuke", *NUKE_VERSION_LONG]

    PATH: *NUKE_DIR


  MENU:
    - Plex:
        open_scene_folder:   addCommand('Open Scene Folder', 'import libFileFolder; libFileFolder.open_folder(nuke.root().knob("name").value())')
        open_project_folder: addCommand('Open Project Folder', 'import libFileFolder;import libData; libFileFolder.open_folder(libData.get_data("project")["path"])')

    - break:   addSeparator()

    # - Save:    "addCommand('Save', 'import menu; save()', 'ctrl+alt+s', 'save.ico')"
    # - Load:    "addCommand('Load', 'import menu; load()', 'ctrl+alt+l', 'load.ico')"

    # - break:   "addSeparator()"

    - arWrite: addCommand('arWrite', 'arWrite()', 'ctrl+alt+w', 'write.ico')

    - break:   addSeparator()

    - Report:  addCommand('Report', 'import libFunc; libFunc.get_help("issues")', 'ctrl+alt+r', 'report.ico')
    - Help:    addCommand('Help', 'import libFunc; libFunc.get_help()', 'ctrl+alt+h', 'help.ico')



#*****************************************************************************************************************************
# HOUDINI
HOUDINI:
  version: &HOUDINI_VERSION 16.0.633
  path:    &HOUDINI_PATH !join ["C:/Program Files/Side Effects Software/Houdini ", *HOUDINI_VERSION, /bin/houdini.exe]

  start: *HOUDINI_PATH

  renderer:
  renderer_path:


  ENV:
    PYTHONPATH:
      - !env_first [SOFTWARE_PATH]
      - !env_first [SOFTWARE_PATH, /scripts]
      - !env_first [SOFTWARE_PATH, /plugins]

    HOUDINI_SPLASH_FILE: !env [IMG_PATH, /software/houdini/houdini_splash.png]



#*****************************************************************************************************************************
# 3DsMax
MAX:
  version: &MAX_VERSION 2017
  path:    &MAX_PATH !join ["C:/Program Files/Autodesk/3ds Max ", *MAX_VERSION, /3dsmax.exe]

  start: *MAX_PATH

  renderer:
  renderer_path:

  ENV:
    PATH:
      - !env_first [SOFTWARE_PATH]
      - !env_first [SOFTWARE_PATH, /scripts]
      - !env_first [SOFTWARE_PATH, /plugins]
      - !env_first [IMG_PATH, /software/max]

    PYTHONPATH:
      - !env_first [SOFTWARE_PATH]
      - !env_first [SOFTWARE_PATH, /scripts]
      - !env_first [SOFTWARE_PATH, /plugins]
      - !env_first [IMG_PATH, /software/max]

  # ADSKFLEX_LICENSE_FILE:

  MENU:
    - plex:
        open_scene_folder:   AddItem(MaxPlus.ActionFactory.Create('Open Scene Folder2', 'Open Scene Folder', max_menu.open_scene_folder))
        open_project_folder: AddItem(MaxPlus.ActionFactory.Create('Open Project Folder2', 'Open Project Folder', max_menu.open_project_folder))

    - break: AddSeparator()

    # - Save:    AddItem(MaxPlus.ActionFactory.Create('Report2', 'Report', 'import libFunc; libFunc.get_help("issues")')))
    # - Load:    AddItem(MaxPlus.ActionFactory.Create('Report2', 'Report', 'import libFunc; libFunc.get_help("issues")')))

    # - break:   AddSeparator()

    - Report: "AddItem(MaxPlus.ActionFactory.Create('Report2', 'Report', max_menu.get_report))"
    - Help:   "AddItem(MaxPlus.ActionFactory.Create('Help2', 'Help', max_menu.get_help))"



#*****************************************************************************************************************************
# RV
RV:
  version:
  path: "C:/Program Files/Tweak/RV/bin/rv.exe"

  start:

