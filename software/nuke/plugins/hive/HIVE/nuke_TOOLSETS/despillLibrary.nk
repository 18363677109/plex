set cut_paste_input [stack 0]
version 7.0 v8
push $cut_paste_input
NoOp {
name DeSpill_library
selected true
xpos -4813
ypos -975
}
set Nb5f6ac30 [stack 0]
OFXuk.co.thefoundry.keylight.keylight_v201 {
show "Final Result"
unPreMultiply false
screenColour {-2.863162518 -0.2006689757 -1.242192268}
screenGain 1
screenBalance 0.5
alphaBias {0.5 0.5 0.5}
despillBias {0.5 0.5 0.5}
gangBiases true
preBlur 0
"Screen Matte" 0
screenClipMin 0
screenClipMax 1
screenClipRollback 0
screenGrowShrink 0
screenSoftness 0
screenDespotBlack 0
screenDespotWhite 0
screenReplaceMethod "Soft Colour"
screenReplaceColour {0.5 0.5 0.5}
Tuning 0
midPoint 0.5
lowGain 1
midGain 1
highGain 1
"Inside Mask" 0
sourceAlphaHandling Ignore
insideReplaceMethod "Soft Colour"
insideReplaceColour {0.5 0.5 0.5}
Crops 0
SourceXMethod Colour
SourceYMethod Colour
SourceEdgeColour 0
SourceCropL 0
SourceCropR 1
SourceCropB 0
SourceCropT 1
balanceSet false
insideComponent None
outsideComponent None
cacheBreaker true
name Keylight6
selected true
xpos -4305
ypos -810
}
push $Nb5f6ac30
Ultimatte {
screen_color {0 1 0}
toolbar_screen {0 1 0 0 0 0 0 0}
toolbar_addoverlay {0 0 0 0 0 0 0 0}
toolbar_removeoverlay {0 0 0 0 0 0 0 0}
toolbar_addmatte {0 0 0 0 0 0 0 0}
toolbar_removenoise {0 0 0 0 0 0 0 0}
toolbar_restorespill {0 0 0 0 0 0 0 0}
toolbar_removespill {0 0 0 0 0 0 0 0}
toolbar_matchcolor {0 0 0 0 0 0 0 0}
toolbar_matchshadow {0 0 0 0 0 0 0 0}
toolbar_holdShadow {0 0 0 0 0 0 0 0}
toolbar_restoreDetail {0 0 0 0 0 0 0 0}
name Ultimatte1
selected true
xpos -4415
ypos -810
}
push $Nb5f6ac30
Expression {
expr1 "(r+b)/2 < g ? (r+b)/2 : g"
name Expression1
selected true
xpos -4525
ypos -810
}
push $Nb5f6ac30
Group {
name PxF_KillSpill2
selected true
xpos -4635
ypos -810
addUserKnob {20 User}
addUserKnob {4 back_color l BackColor t "Set the Back Color to the dominant color you wish to suppress." M {Red Green Blue ""}}
back_color Green
addUserKnob {7 roger l Mix R 0 2}
roger 0.5
addUserKnob {18 SpillTweak R 0 10}
SpillTweak 1
addUserKnob {26 ""}
addUserKnob {26 "" t "PxF_KillSpill.\nUse KillSpill to neutralize the back color of a blue/green/red screen plate." -STARTLINE T "PxF_KillSpill 2.0 - (c) 2008 - Xavier Bourque - www.pixelfudger.com"}
}
Input {
inputs 0
name Input1
xpos 227
ypos -844
}
Dot {
name Dot3
xpos 255
ypos -768
}
set N9cf6b50 [stack 0]
Shuffle {
red green
blue green
alpha black
name Green
xpos 608
ypos -551
}
set N9cfadc0 [stack 0]
push $N9cf6b50
Shuffle {
green red
blue red
alpha black
name Red
xpos 515
ypos -550
}
set N9d07fd0 [stack 0]
Switch {
inputs 2
which {{"back_color == 0 ? 1 : back_color == 1 ? 0 : 0" i}}
name LowA
xpos 608
ypos -445
}
Multiply {
value {{"1 - roger" i}}
name Multiply1
xpos 608
ypos -395
}
push $N9cf6b50
Shuffle {
red blue
green blue
alpha black
name Blue
xpos 719
ypos -549
}
set N9d25d30 [stack 0]
push $N9cfadc0
push 0
Switch {
inputs 3
which {{"back_color == 0 ? 2 : back_color == 1 ? 2 : 1" i}}
name LowB
xpos 719
ypos -438
}
Multiply {
value {{roger i}}
name Multiply2
xpos 719
ypos -392
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 668
ypos -276
}
set N9d43c30 [stack 0]
Viewer {
name Viewer1
xpos 796
ypos 65
}
push $N9cf6b50
Dot {
name Dot1
xpos 376
ypos 167
}
push $N9cf6b50
push $N9d25d30
push $N9cfadc0
push $N9d07fd0
Switch {
inputs 3
which {{back_color i}}
name High
xpos 515
ypos -442
}
push $N9d43c30
Merge2 {
inputs 2
operation min
name Merge10
xpos 515
ypos -276
}
set N9d77050 [stack 0]
ShuffleCopy {
inputs 2
red red
green green
name ShuffleBlue
xpos 106
ypos -274
}
push $N9cf6b50
push $N9d77050
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleGreen
xpos 6
ypos -276
}
push $N9cf6b50
push $N9d77050
ShuffleCopy {
inputs 2
green green
blue blue
name ShuffleRed
xpos -98
ypos -276
}
Switch {
inputs 3
which {{back_color i}}
name Switch1
xpos 6
ypos -152
}
set N9dab500 [stack 0]
push $N9cf6b50
push $N9dab500
Merge2 {
inputs 2
operation minus
name Merge9
xpos 227
ypos -9
}
Saturation {
saturation 0
name Saturation1
xpos 227
ypos 18
}
ColorCorrect {
gain {{SpillTweak.r i} {SpillTweak.g i} {SpillTweak.b i} {1 i}}
name ColorCorrect1
xpos 227
ypos 45
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos 6
ypos 82
}
ShuffleCopy {
inputs 2
name ShuffleCopy1
xpos 6
ypos 168
}
Output {
name Output1
selected true
xpos 6
ypos 226
}
end_group
push $Nb5f6ac30
Group {
name spillx1
selected true
xpos -4745
ypos -810
addUserKnob {20 SpillX}
addUserKnob {4 green_blue l "screen type" M {blue green ""}}
green_blue green
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xe094aff
label "Blue Screen"
note_font_size 42
xpos -637
ypos -453
bdwidth 345
bdheight 505
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x1420cff
label "GreenScreen\n"
note_font_size 42
xpos -1314
ypos -450
bdwidth 542
bdheight 545
}
Input {
inputs 0
name Input1
xpos -727
ypos -513
}
set N9e09970 [stack 0]
Dot {
name Dot17
xpos -967
ypos -507
}
Dot {
name Dot1
xpos -967
ypos -367
}
set N9e11b90 [stack 0]
Dot {
name Dot6
xpos -967
ypos -13
}
push $N9e11b90
Dot {
name Dot8
xpos -967
ypos -62
}
push $N9e11b90
Shuffle {
green red
blue red
name RED
xpos -1001
ypos -243
}
Dot {
name Dot4
xpos -967
ypos -171
}
push $N9e11b90
Dot {
name Dot2
xpos -1096
ypos -367
}
Shuffle {
red blue
green blue
name BLUE
xpos -1130
ypos -246
}
Dissolve {
inputs 2
which 0.5
name Dissolve1
xpos -1130
ypos -188
}
push $N9e11b90
Dot {
name Dot3
xpos -827
ypos -367
}
Shuffle {
red green
blue green
name GREEN
xpos -861
ypos -255
}
Dot {
name Dot5
xpos -827
ypos -116
}
Merge2 {
inputs 2
operation min
name Merge1
xpos -1130
ypos -122
}
ShuffleCopy {
inputs 2
red red
blue blue
name ShuffleCopy1
xpos -1130
ypos -68
}
set N9e6bfc0 [stack 0]
Merge2 {
inputs 2
operation difference
name Merge2
xpos -1130
ypos -19
}
Shuffle {
red green
green black
blue green
name Shuffle1
xpos -1130
ypos 11
}
Saturation {
saturation 0
name Saturation1
xpos -1130
ypos 41
}
push $N9e6bfc0
Dot {
name Dot7
xpos -1221
ypos -62
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos -1255
ypos 41
}
Dot {
name Dot15
xpos -1221
ypos 136
}
push $N9e09970
Dot {
name Dot18
xpos -449
ypos -507
}
Dot {
name Dot9
xpos -449
ypos -378
}
set N9eb6780 [stack 0]
Dot {
name Dot10
xpos -552
ypos -378
}
Shuffle {
green red
blue red
name RED1
xpos -586
ypos -262
}
push $N9eb6780
Shuffle {
red green
blue green
name GREEN1
xpos -483
ypos -267
}
Dot {
name Dot12
xpos -449
ypos -205
}
set N9ed8de0 [stack 0]
Merge2 {
inputs 2
operation max
name Max
xpos -586
ypos -208
}
Shuffle {
green black
blue black
name Shuffle2
xpos -586
ypos -143
}
push $N9ed8de0
Shuffle {
red black
blue black
name Shuffle3
xpos -483
ypos -142
}
Dot {
name Dot13
xpos -449
ypos -70
}
Merge2 {
inputs 2
operation plus
name Merge4
xpos -586
ypos -76
}
push $N9ed8de0
push $N9eb6780
Dot {
name Dot11
xpos -342
ypos -378
}
Shuffle {
red blue
green blue
name BLUE1
xpos -376
ypos -268
}
Merge2 {
inputs 2
operation min
name Min
xpos -376
ypos -211
}
Shuffle {
red black
green black
name Shuffle4
xpos -376
ypos -142
}
Dot {
name Dot14
xpos -345
ypos 4
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos -586
ypos -2
}
Dot {
name Dot16
xpos -552
ypos 136
}
Switch {
inputs 2
which {{green_blue==1}}
name Switch2
xpos -783
ypos 130
}
Output {
name Output1
xpos -783
ypos 230
}
end_group
push $Nb5f6ac30
Group {
name despill2
note_font "Bitstream Vera Sans"
selected true
xpos -4855
ypos -810
mapsize {0.15 0.15}
addUserKnob {20 DespillMadness l "Despill Settings"}
addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
addUserKnob {41 algorithm l "despill algorithm" T GizmoControl.algorithm}
addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
addUserKnob {26 ""}
addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
addUserKnob {26 spacer l " " T " "}
addUserKnob {6 sourceLuma l "restore source luminance" t "Restores luminance of original image." +STARTLINE}
sourceLuma true
addUserKnob {41 saturation T CC_SpillMap.saturation}
addUserKnob {41 gamma T CC_SpillMap.gamma}
addUserKnob {41 offset T CC_SpillMap.offset}
addUserKnob {26 ""}
addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l mask T KeymixMask.maskChannel}
addUserKnob {6 invmsk l invert -STARTLINE}
addUserKnob {41 which l mix T mix.which}
}
Input {
inputs 0
name img
xpos 262
ypos -342
}
Dot {
name Dot6
xpos 296
ypos -186
}
set N9f6e4d0 [stack 0]
Dot {
name Dot2
xpos 296
ypos -71
}
set N9f743a0 [stack 0]
Dot {
name Dot3
xpos 626
ypos -71
}
set N9f784e0 [stack 0]
Expression {
expr2 b>g*LimitPercentage?g*LimitPercentage:b
expr3 b-g*LimitPercentage
name GreenLimitsBlue1
xpos 728
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9f784e0
Expression {
expr2 b>r*LimitPercentage?r*LimitPercentage:b
expr3 b-r*LimitPercentage
name RedLimitsBlue
xpos 592
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9f784e0
Expression {
expr2 b>(g+2*r)/2*LimitPercentage?(g+2*r)/2*LimitPercentage:b
expr3 b-(2*r+g)*LimitPercentage/2
name DoubleRedAve2
xpos 1125
ypos 43
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9f784e0
Expression {
expr2 b>(2*g+r)/2*LimitPercentage?(2*g+r)/2*LimitPercentage:b
expr3 b-(r+2*g)*LimitPercentage/2
name DoubleGreenAve
xpos 998
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage}}
}
push $N9f784e0
Expression {
expr2 b>(g+r)/2*LimitPercentage?(g+r)/2*LimitPercentage:b
expr3 b-(r+g)*LimitPercentage/2
name RedAndGreenLimitBlue
xpos 862
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 5
which {{GizmoControl.algorithm i}}
name SwitchBlue
xpos 728
ypos 190
}
Dot {
name Dot5
xpos 762
ypos 370
}
push $N9f743a0
Dot {
name Dot1
xpos 164
ypos -71
}
set N9fc2ea0 [stack 0]
Expression {
expr1 g>b*LimitPercentage?b*LimitPercentage:g
expr3 g-b*LimitPercentage
name BlueLimitsGreen
xpos -15
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9fc2ea0
Expression {
expr1 g>r*LimitPercentage?r*LimitPercentage:g
expr3 g-r*LimitPercentage
name RedLimitsGreen
xpos -160
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage 0.94
}
push $N9fc2ea0
Expression {
expr1 g>(b+2*r)/3*LimitPercentage?(b+2*r)/3*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name DoubleRedAve
xpos 370
ypos 42
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9fc2ea0
Expression {
expr1 g>(2*b+r)/3*LimitPercentage?(2*b+r)/3*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name DoubleBlueAve
xpos 257
ypos 42
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $N9fc2ea0
Expression {
expr1 g>(b+r)/2*LimitPercentage?(b+r)/2*LimitPercentage:g
expr3 g-(r+b)*LimitPercentage/2
name RedAveBlueLimitsGreen
xpos 130
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 5
which {{GizmoControl.algorithm i}}
name SwitchGreen
xpos -15
ypos 199
}
Dot {
name Dot4
xpos 19
ypos 370
}
Switch {
inputs 2
which {{GizmoControl.screenType i}}
name SwitchMain
xpos 257
ypos 366
}
Clamp {
channels alpha
name Clamp1
xpos 257
ypos 408
}
ColorCorrect {
maskChannelInput rgba.alpha
name CC_SpillMap
note_font Verdana
xpos 257
ypos 468
}
set Na01ffe0 [stack 0]
Dot {
name Dot9
xpos 440
ypos 478
}
Dot {
name Dot10
xpos 440
ypos 1389
}
Input {
inputs 0
name mask
xpos -696
ypos -348
number 1
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue}
expr0 0
channel1 {-rgba.red -rgba.green -rgba.blue}
expr1 0
channel2 {-rgba.red -rgba.green -rgba.blue}
expr2 0
channel3 {rgba.alpha none none rgba.alpha}
expr3 a==0?0:a
name AlphaFix1
label "To avid Gizmo being in state of\nerror without something plugged in input."
xpos -696
ypos 861
}
set Na0476e0 [stack 0]
push $Na0476e0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name CopyMask
xpos -296
ypos 867
}
Invert {
name Invert1
xpos -296
ypos 943
disable {{parent.invmsk i}}
}
push $N9f6e4d0
Dot {
name Dot7
xpos -345
ypos -186
}
Dot {
name Dot8
xpos -345
ypos 551
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue}
expr0 0
channel1 {-rgba.red -rgba.green -rgba.blue}
expr1 0
channel2 {-rgba.red -rgba.green -rgba.blue}
expr2 0
channel3 {rgba.alpha none none rgba.alpha}
expr3 a==0?0:a
name AlphaFix
label "To avid Gizmo being in state of\nerror without something plugged in input."
xpos -27
ypos 534
}
set Na06c880 [stack 0]
Dot {
name Dot11
xpos -113
ypos 614
}
Dot {
name Dot12
xpos -113
ypos 818
}
set Na07c1d0 [stack 0]
push $Na06c880
push $Na06c880
push $Na01ffe0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
from3 rgba.alpha
to3 rgba.alpha
name CopyAlpha
xpos 257
ypos 534
}
set Na080520 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge3
xpos -27
ypos 672
}
Clamp {
name Clamp2
xpos -27
ypos 698
}
Saturation {
saturation 0
name Saturation2
xpos -27
ypos 736
}
push $Na080520
Merge2 {
inputs 2
operation plus
name RestoreLuma
xpos 257
ypos 736
disable {{!parent.sourceLuma i}}
}
Keymix {
inputs 3
maskChannel -rgba.alpha
name KeymixMask
xpos 257
ypos 943
}
push $Na07c1d0
Dot {
name Dot13
xpos -113
ypos 1087
}
Dissolve {
inputs 2
which 1
name mix
xpos 257
ypos 1077
}
Switch {
inputs 2
which {{GizmoControl.spillMatteOut i}}
name SwitchSpillMap
xpos 257
ypos 1385
}
Output {
name Output1
xpos 257
ypos 1485
}
NoOp {
inputs 0
name GizmoControl
selected true
xpos 875
ypos 414
addUserKnob {20 User}
addUserKnob {26 version l v1.0}
addUserKnob {4 screenType l "screen type" M {green blue}}
addUserKnob {4 algorithm l "despill algorithm" M {average "double green/blue average" "double red average" "red limit" "green/blue limit" ""}}
addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
}
end_group
push $Nb5f6ac30
Group {
name unspill1
selected true
xpos -4965
ypos -810
addUserKnob {20 UnspillMadness l "Unspill Settings"}
addUserKnob {26 text l "" +STARTLINE T "UnspillMadness by Andreas Frickinger"}
addUserKnob {26 ""}
addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
addUserKnob {41 algorithm l "spill matte algorithm" T GizmoControl.algorithm}
addUserKnob {26 ""}
addUserKnob {41 channelBalance l "channel balance" T GizmoControl.channelBalance}
addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
addUserKnob {26 ""}
addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
addUserKnob {41 saturation T CC_SpillMap.saturation}
addUserKnob {41 gamma T CC_SpillMap.gamma}
addUserKnob {41 offset T CC_SpillMap.offset}
addUserKnob {26 ""}
addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
}
Input {
inputs 0
name Input1
xpos 262
ypos -336
}
Dot {
name Dot6
xpos 296
ypos -186
}
set Na0ebbe0 [stack 0]
Dot {
name Dot2
xpos 296
ypos -71
}
set Na0efe00 [stack 0]
Dot {
name Dot3
xpos 426
ypos -71
}
set Na0f3f90 [stack 0]
Expression {
expr3 b-g*LimitPercentage
name GreenLimitsBlue1
xpos 528
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $Na0f3f90
Expression {
expr3 b-r*LimitPercentage
name RedLimitsBlue
xpos 392
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $Na0f3f90
Expression {
expr3 b-(r+g)*LimitPercentage/2
name RedAndGreenLimitBlue
xpos 662
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 3
which {{GizmoControl.algorithm i}}
name SwitchBlue
xpos 528
ypos 190
}
Dot {
name Dot5
xpos 562
ypos 370
}
push $Na0efe00
Dot {
name Dot1
xpos 164
ypos -71
}
set Na126900 [stack 0]
Expression {
expr3 g-b*LimitPercentage
name BlueLimitsGreen
xpos -15
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
push $Na126900
Expression {
expr3 g-r*LimitPercentage
name RedLimitsGreen
xpos -160
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage 1
}
push $Na126900
Expression {
expr3 g-(r+b)*LimitPercentage/2
name RedAveBlueLimitsGreen
xpos 130
ypos 44
addUserKnob {20 User}
addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
}
Switch {
inputs 3
which {{GizmoControl.algorithm i}}
name SwitchGreen
xpos -15
ypos 199
}
Dot {
name Dot4
xpos 19
ypos 370
}
Switch {
inputs 2
which {{GizmoControl.screenType i}}
name SwitchMain
xpos 257
ypos 366
}
Shuffle {
red alpha
green alpha
blue alpha
alpha black
name ShuffleSpillMap
xpos 257
ypos 423
}
Clamp {
channels alpha
name Clamp1
selected true
xpos 257
ypos 449
}
set Na16c870 [stack 0]
Dot {
name Dot17
xpos 967
ypos 459
}
Dot {
name Dot18
xpos 967
ypos 1142
}
push $Na16c870
Multiply {
value {{GizmoControl.channelBalance i} {GizmoControl.channelBalance i} {GizmoControl.channelBalance i} 1}
name MultiplySpillMap
xpos 257
ypos 524
}
set Na180420 [stack 0]
Dot {
name Dot16
xpos 450
ypos 534
}
push $Na0ebbe0
Dot {
name Dot7
xpos -345
ypos -186
}
Dot {
name Dot11
xpos -345
ypos 663
}
set Na1925f0 [stack 0]
Dot {
name Dot12
xpos -345
ypos 826
}
set Na196730 [stack 0]
Dot {
name Dot13
xpos -345
ypos 977
}
set Na19a8a0 [stack 0]
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge3
xpos 416
ypos 973
}
push $Na180420
Dot {
name Dot15
xpos 120
ypos 534
}
push $Na1925f0
Merge2 {
inputs 2
operation plus
Achannels rgb
Bchannels rgb
output rgb
name Merge1
xpos 86
ypos 659
}
Dot {
name Dot14
xpos 822
ypos 663
}
push $Na196730
push $Na180420
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
output rgb
name Merge2
xpos 257
ypos 822
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy1
xpos 788
ypos 816
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy2
xpos 788
ypos 967
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.alpha
name Copy3
xpos 788
ypos 1132
}
ColorCorrect {
maskChannelInput rgba.alpha
name CC_SpillMap
note_font Verdana
xpos 788
ypos 1280
}
set Na1eea60 [stack 0]
Dot {
name Dot9
xpos 971
ypos 1290
}
Dot {
name Dot10
xpos 971
ypos 1504
}
push $Na19a8a0
Dot {
name Dot8
xpos -345
ypos 1406
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue}
expr0 0
channel1 {-rgba.red -rgba.green -rgba.blue}
expr1 0
channel2 {-rgba.red -rgba.green -rgba.blue}
expr2 0
channel3 {rgba.alpha none none rgba.alpha}
expr3 a==0?0:a
name AlphaError
label "To avid Gizmo being in state of\nerror without something plugged in input."
xpos 504
ypos 1389
}
push $Na1eea60
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
from3 rgba.alpha
to3 rgba.alpha
name CopyAlpha
xpos 788
ypos 1389
}
Switch {
inputs 2
which {{GizmoControl.spillMatteOut i}}
name SwitchSpillMap
xpos 788
ypos 1500
}
Output {
name Output1
xpos 788
ypos 1600
}
NoOp {
inputs 0
name GizmoControl
xpos 1244
ypos 241
addUserKnob {20 User}
addUserKnob {18 channelBalance l "channel balance" t "the values from this knob get added/subtracted to the corresponding channels with the spill matte as a mask."}
channelBalance {0.2 0.7 0.3}
addUserKnob {26 version l v1.0}
addUserKnob {4 screenType l "screen type" M {green blue}}
addUserKnob {4 algorithm l "despill algorithm" M {average "red limit" "green/blue limit" ""}}
addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
spillMatteOut true
}
end_group
push $Nb5f6ac30
Group {
name spillReplace1
selected true
xpos -5075
ypos -810
addUserKnob {20 User}
addUserKnob {20 Info l SpillReplace2 n 1}
Info 0
addUserKnob {26 Info2 l "" +STARTLINE T "by Michael Habenicht\nwww.tinitron.de\n\nbased on the shake macro by Christian Wieser"}
addUserKnob {20 endGroup n -1}
addUserKnob {4 spillColor M {Red Green Blue}}
spillColor Green
addUserKnob {7 limiterColorBalance}
limiterColorBalance 0.5
addUserKnob {18 spillReplace}
spillReplace {0.5 0.5 0.5}
addUserKnob {6 useReplaceImage +STARTLINE}
useReplaceImage true
addUserKnob {18 spillBias}
spillBias {0.5 0.5 0.5}
addUserKnob {7 neutralizer}
addUserKnob {41 which l restoreLuminance T Dissolve1.which}
addUserKnob {20 spillMatte}
addUserKnob {26 divider3 l Grade}
addUserKnob {41 blackpoint T Grade1.blackpoint}
addUserKnob {41 whitepoint T Grade1.whitepoint}
addUserKnob {41 black l lift T Grade1.black}
addUserKnob {41 white l gain T Grade1.white}
addUserKnob {41 multiply T Grade1.multiply}
addUserKnob {41 add l offset T Grade1.add}
addUserKnob {41 gamma T Grade1.gamma}
addUserKnob {41 black_clamp l "black clamp" T Grade1.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade1.white_clamp}
addUserKnob {26 divider1 l Erode}
addUserKnob {41 size T FilterErode1.size}
addUserKnob {41 filter T FilterErode1.filter}
addUserKnob {26 divider2 l Blur}
addUserKnob {41 size_1 l size T Blur1.size}
addUserKnob {41 filter_1 l filter T Blur1.filter}
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xd0196ff
label Blue
note_font_size 42
note_font_color 0x499602d2
xpos -1103
ypos -126
bdwidth 204
bdheight 299
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x499602d2
label Green
note_font_size 42
note_font_color 0x499602d2
xpos -1354
ypos -126
bdwidth 204
bdheight 299
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x961901ff
label Red
note_font_size 42
note_font_color 0x499602d2
xpos -1597
ypos -126
bdwidth 204
bdheight 299
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x11d96ff
label Blue
note_font_size 42
note_font_color 0x499602d2
xpos -50
ypos -130
bdwidth 198
bdheight 275
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0x499602d2
label Green
note_font_size 42
note_font_color 0x499602d2
xpos -280
ypos -130
bdwidth 198
bdheight 275
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0x962101ff
label Red
note_font_size 42
note_font_color 0x499602d2
xpos -509
ypos -130
bdwidth 198
bdheight 275
}
Input {
inputs 0
name In
xpos -741
ypos -585
}
set Na257bb0 [stack 0]
Shuffle {
red green
blue green
name G
xpos 218
ypos -441
}
set Na25bcc0 [stack 0]
Dot {
name Dot2
xpos 717
ypos -102
}
set Na268ea0 [stack 0]
push $Na257bb0
Shuffle {
red blue
green blue
name B
xpos 620
ypos -441
}
set Na26d050 [stack 0]
push $Na257bb0
Shuffle {
green red
blue red
name R
xpos -211
ypos -441
}
set Na27a150 [stack 0]
Dot {
name Dot1
xpos 600
ypos -102
}
set Na2872d0 [stack 0]
Group {
inputs 3
name BlueMatte
xpos 740
ypos -33
}
Input {
inputs 0
name B
xpos 680
ypos -129
number 1
}
Input {
inputs 0
name G
xpos 531
ypos -129
number 2
}
Input {
inputs 0
name R
xpos 350
ypos -129
}
Merge2 {
inputs 2
operation max
name Max
xpos 350
ypos -57
}
Merge2 {
inputs 2
operation minus
name Merge1
xpos 497
ypos 15
}
Output {
name Output1
xpos 497
ypos 87
}
end_group
push $Na268ea0
push $Na26d050
push $Na2872d0
Group {
inputs 3
name GreenMatte
xpos 620
ypos -33
}
Input {
inputs 0
name G
xpos 531
ypos -129
number 2
}
Input {
inputs 0
name B
xpos 680
ypos -129
number 1
}
Input {
inputs 0
name R
xpos 350
ypos -129
}
Merge2 {
inputs 2
operation max
name Max
xpos 350
ypos -57
}
Merge2 {
inputs 2
operation minus
name Merge1
xpos 497
ypos 15
}
Output {
name Output1
xpos 497
ypos 87
}
end_group
push $Na268ea0
push $Na26d050
push $Na2872d0
Group {
inputs 3
name RedMatte
xpos 496
ypos -33
}
Input {
inputs 0
name R
xpos 350
ypos -129
}
Input {
inputs 0
name B
xpos 680
ypos -129
number 1
}
Input {
inputs 0
name G
xpos 531
ypos -129
number 2
}
Merge2 {
inputs 2
operation max
name Max
selected true
xpos 620
ypos -57
}
Merge2 {
inputs 2
operation minus
name Merge1
xpos 497
ypos 15
}
Output {
name Output1
xpos 497
ypos 87
}
end_group
Switch {
inputs 3
which {{spillColor i}}
name Switch2
xpos 620
ypos 39
}
Shuffle {
red black
green black
blue black
alpha green
name Shuffle1
xpos 620
ypos 79
}
Grade {
channels alpha
name Grade1
xpos 620
ypos 103
}
FilterErode {
size 0
filter gaussian
name FilterErode1
xpos 620
ypos 137
}
Blur {
channels alpha
name Blur1
xpos 620
ypos 171
}
set Na348fe0 [stack 0]
Dot {
name Dot4
xpos 654
ypos 1050
}
push $Na348fe0
Input {
inputs 0
name BG
xpos 415
ypos -571
number 1
}
push $Na257bb0
Shuffle {
red white
green white
blue white
alpha white
name White
xpos -55
ypos -441
}
set Na35c460 [stack 0]
Multiply {
channels rgb
value {{spillReplace.r i} {spillReplace.g i} {spillReplace.b i} 1}
name ReplaceColor
xpos 180
ypos 495
}
Switch {
inputs 2
which {{useReplaceImage i}}
name Switch1
xpos 203
ypos 543
}
push $Na26d050
push $Na25bcc0
Merge2 {
inputs 2
operation min
name MaxNewB1
xpos 47
ypos -43
}
push $Na25bcc0
push $Na27a150
Merge2 {
inputs 2
operation max
name MaxNewR1
xpos -40
ypos -45
}
push $Na25bcc0
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy8
xpos -40
ypos 10
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy9
xpos -40
ypos 70
}
push $Na26d050
push $Na25bcc0
Merge2 {
inputs 2
operation max
name MaxNewB
xpos -182
ypos -45
}
push $Na25bcc0
push $Na27a150
Merge2 {
inputs 2
operation max
name MaxNewR
xpos -270
ypos -46
}
push $Na25bcc0
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy2
xpos -270
ypos 10
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy3
xpos -270
ypos 70
}
push $Na25bcc0
push $Na26d050
Merge2 {
inputs 2
operation max
name MaxNewB2
xpos -411
ypos -42
}
push $Na27a150
push $Na25bcc0
Merge2 {
inputs 2
operation min
name MaxNewR2
xpos -499
ypos -44
}
push $Na25bcc0
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy10
xpos -499
ypos 10
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy11
xpos -499
ypos 68
}
Switch {
inputs 3
which {{spillColor i}}
name Switch4
xpos -270
ypos 231
}
push $Na26d050
push $Na25bcc0
push $Na27a150
Dissolve {
inputs 2
channels rgb
which {{limiterColorBalance i}}
name MixRB1
xpos -1093
ypos -41
}
push $Na35c460
Multiply {
channels rgb
value {{fabs(min(spillBias.r,spillBias.g)-spillBias.b) i} {fabs(min(spillBias.r,spillBias.g)-spillBias.b) i} {fabs(min(spillBias.r,spillBias.g)-spillBias.b) i} 1}
name BiasDifference1
xpos -999
ypos -41
}
Merge2 {
inputs 2
operation minus
name ISubBias1
xpos -1093
ypos 7
}
Merge2 {
inputs 2
operation min
name Min1
xpos -1093
ypos 55
}
push $Na257bb0
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy6
xpos -1093
ypos 98
}
push $Na25bcc0
push $Na26d050
push $Na27a150
Dissolve {
inputs 2
channels rgb
which {{limiterColorBalance i}}
name MixRB
xpos -1344
ypos -41
}
push $Na35c460
Multiply {
channels rgb
value {{fabs(min(spillBias.r,spillBias.b)-spillBias.g) i} {fabs(min(spillBias.r,spillBias.b)-spillBias.g) i} {fabs(min(spillBias.r,spillBias.b)-spillBias.g) i} 1}
name BiasDifference
xpos -1250
ypos -41
}
Merge2 {
inputs 2
operation minus
name ISubBias
xpos -1344
ypos 7
}
Merge2 {
inputs 2
operation min
name Min
xpos -1344
ypos 55
}
push $Na257bb0
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Copy1
xpos -1344
ypos 98
}
push $Na27a150
push $Na26d050
push $Na25bcc0
Dissolve {
inputs 2
channels rgb
which {{limiterColorBalance i}}
name MixRB2
xpos -1587
ypos -42
}
push $Na35c460
Multiply {
channels rgb
value {{fabs(min(spillBias.b,spillBias.g)-spillBias.r)} {fabs(min(spillBias.b,spillBias.g)-spillBias.r)} {fabs(min(spillBias.b,spillBias.g)-spillBias.r)} 1}
name BiasDifference2
xpos -1489
ypos -33
}
Merge2 {
inputs 2
operation minus
name ISubBias2
xpos -1587
ypos 7
}
Merge2 {
inputs 2
operation min
name Min2
xpos -1587
ypos 55
}
push $Na257bb0
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy7
xpos -1587
ypos 98
}
Switch {
inputs 3
which {{spillColor i}}
name Switch3
xpos -1344
ypos 231
}
Dissolve {
inputs 2
channels rgb
which {{neutralizer i}}
name MixNeutralizer
xpos -370
ypos 423
}
Keymix {
inputs 3
channels rgba
name Keymix1
xpos 203
ypos 615
}
set Na4c6de0 [stack 0]
push $Na257bb0
Dot {
name Dot6
xpos -707
ypos 714
}
set Na4ce8b0 [stack 0]
Dot {
name Dot5
xpos 94
ypos 714
}
set Na4ce520 [stack 0]
push $Na4c6de0
Merge2 {
inputs 2
operation minus
name Merge2
xpos 60
ypos 777
}
Clamp {
channels rgb
name Clamp1
xpos 60
ypos 801
}
Expression {
expr0 0.3*r+0.59*g+0.11*b
expr1 0.3*r+0.59*g+0.11*b
expr2 0.3*r+0.59*g+0.11*b
name Expression1
xpos 60
ypos 825
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos 60
ypos 849
}
push $Na4c6de0
push $Na4ce520
Merge2 {
inputs 2
operation minus
name Merge4
xpos 290
ypos 801
}
Clamp {
channels rgb
name Clamp2
xpos 290
ypos 825
}
Expression {
expr0 0.3*r+0.59*g+0.11*b
expr1 0.3*r+0.59*g+0.11*b
expr2 0.3*r+0.59*g+0.11*b
name Expression2
xpos 290
ypos 849
}
Merge2 {
inputs 2
operation minus
name Merge5
xpos 122
ypos 897
}
push $Na4c6de0
Dissolve {
inputs 2
channels rgb
name Dissolve1
xpos 203
ypos 945
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy5
xpos 203
ypos 1042
}
push $Na4ce8b0
Dot {
name Dot3
xpos -707
ypos 1146
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
from3 rgba.alpha
to3 rgba.alpha
name Copy4
xpos 203
ypos 1121
}
Output {
name Output1
xpos 203
ypos 1215
}
end_group
push $Nb5f6ac30
Group {
name Despill_FS2
help "Despill tool that allows manipulation of the spill matte. It \nuses the generated spill matte to apply a colour or background, and has \ncontrolls for its \napplication.\nhttp://intranet/depts/Compositing:Nuke:Gizmos:Despill_FS"
label "\[value screenColour]\n"
selected true
xpos -5186
ypos -820
addUserKnob {20 Spill_Replace l SpillReplace}
addUserKnob {4 screenColour l "Screen Colour" t "Select screen colour \nto perform suppression on" M {Red Green Blue}}
screenColour Green
addUserKnob {6 invertMatte l "Invert Mask" t "Invert incoming mask" +STARTLINE}
addUserKnob {6 preserveAlpha l "Preserve Alpha" t "When checked this \npreserves the incomming Alpha channel. Otherwise the spill matte will be \nset to the Alpha channel." -STARTLINE}
addUserKnob {26 ""}
addUserKnob {4 suppressionMode l "Suppression Mode" t "Select spill \nsuppression maths.\nMax RGB uses the highest values in the other two \nchannels to limit spill.\nWeighted RGB uses an average of the other two \nchannels, but can be modified.\nHue Correct uses the hue corrects \nsuppression maths to limit the spill colour. This method does not allow \nthe use of the Bias option to aid spill suppression." M {"Max RGB" "Weighted RGB" "Hue Correct" ""}}
addUserKnob {18 bias l Bias}
bias {0.5 0.5 0.5}
addUserKnob {20 weightedOpt l "Weighted Suppression Options" n 1}
weightedOpt 0
addUserKnob {41 redAmt l Red t "Amount of red channel taken into \naccount when calulating spill suppression matte. This value is not used \nfor red spill suppression." T Avg_suppress.redAmt}
addUserKnob {41 greenAmt l Green t "Amount of green channel taken into \naccount when calulating spill suppression matte. This value is not used \nfor green spill suppression." T Avg_suppress.greenAmt}
addUserKnob {41 blueAmt l Blue t "Amount of blue channel taken into \naccount when calulating spill suppression matte. This value is not used \nfor blue spill suppression." T Avg_suppress.blueAmt}
addUserKnob {41 weight l Weight t "Weighting of the two channels used \nto generate spill suppression matte. The default value of 0.5 divides \nthe two channels by 2." T Avg_suppress.weight}
addUserKnob {26 ""}
addUserKnob {20 endWeightedOpt n -1}
addUserKnob {20 hueCorrectOpt l "Hue Correct Options" n 1}
hueCorrectOpt 0
addUserKnob {41 hue l "" +STARTLINE T HueCorrect1.hue}
addUserKnob {26 ""}
addUserKnob {20 endHueCorrectOpt n -1}
addUserKnob {26 ""}
addUserKnob {4 replaceImage l "Replace Spill With" t "Designate an \nimage to replace spill region, or use a colour." M {Colour Image}}
addUserKnob {18 replaceColour l "Replace Colour" t "Assign this colour \nto spill area"}
replaceColour {0.5 0.5 0.5}
addUserKnob {7 hueChange l "Hue Rotate" t "Use sparingly.\nRotate the \nHue of the incoming image to alter the spill colour quality before any \nspill suppress operations. This action is reversed before output" R -180 180}
addUserKnob {6 max l "Use max RGB spill matte" t "Enable to use only \nmaxRGB to designate filled section of spill matte." +STARTLINE}
max true
addUserKnob {7 neutraliser l Neutraliser t "Increase to mix a balanced \nspill colour removed version of the plate to the current spill \nsuppression."}
addUserKnob {7 spillRangeLow l "Spill Range Low" t "Increase the lower \nvalues used to designate the intensity of the spill replacement."}
addUserKnob {7 spillRangeHigh l "Spill Range High" t "Decrease the \nhigher values used to designate the intensity of the spill replacement."}
spillRangeHigh 1
addUserKnob {7 erode l "Dilate Erode " t "Adjust to dilate or reode \nthe spill matte." R -3 3}
addUserKnob {7 restoreLuma l "Restore Luminance" t "Increase to \nrestore luminance altered during spill suppression operation."}
restoreLuma 1
addUserKnob {4 DesatMethod l "Desat Method" t "This changes the \ndesaturation process which will be fed back into the \"Restore \nLuminance\" functionality" M {"Rec 709" "Ccir 601" Average Maximum ""}}
addUserKnob {26 ""}
addUserKnob {6 matteView l "View Spill Replace Matte" t "View a \ngreyscale representation of the pixels and values of spill suppression \nand replacement areas." +STARTLINE}
}
BackdropNode {
inputs 0
name Suppression_method
tile_color 0x7171c600
note_font_size 42
xpos 485
ypos -787
bdwidth 244
bdheight 238
}
Input {
inputs 0
name FG
xpos 570
ypos -1305
}
HSVTool {
huerotation {{parent.hueChange i}}
brtsrcs {0 10000}
output none
name HueIn
xpos 570
ypos -1020
}
Dot {
name Dot71
xpos 604
ypos -955
}
set Na582d30 [stack 0]
Dot {
name Dot79
xpos 288
ypos -955
}
Dot {
name Dot80
xpos 288
ypos -174
}
set Na58b060 [stack 0]
Dot {
name Dot89
xpos 288
ypos 277
}
set Na58f1c0 [stack 0]
Dot {
name Dot107
xpos 288
ypos 624
}
set Na5932d0 [stack 0]
Dot {
name Dot93
xpos 288
ypos 849
}
Input {
inputs 0
name Mask
xpos 2028
ypos -1304
number 1
}
Dot {
name Dot67
xpos 2062
ypos 61
}
set Na59f700 [stack 0]
Dot {
name Dot68
xpos 2161
ypos 61
}
Dot {
name Dot69
xpos 2161
ypos 309
}
push $Na59f700
Invert {
name Invert1
xpos 2028
ypos 156
}
Switch {
inputs 2
which {{parent.invertMatte i}}
name Switch7
xpos 2028
ypos 304
}
set Na5b5550 [stack 0]
push $Na59f700
Dot {
name Dot70
xpos 1952
ypos 61
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle3
xpos 1918
ypos 156
}
Merge2 {
inputs 2
operation plus
name Merge8
xpos 1918
ypos 305
}
Invert {
name Invert2
xpos 1803
ypos 298
}
Dot {
name Dot11
xpos 1527
ypos 310
}
set Na5e3ab0 [stack 0]
Dot {
name Dot2
xpos 1527
ypos 722
}
push $Na5e3ab0
push $Na582d30
Dot {
name Dot75
xpos 1356
ypos -955
}
set Na5ebcd0 [stack 0]
Dot {
name Dot10
xpos 1443
ypos -955
}
set Na5efcc0 [stack 0]
Expression {
expr0 r>max(g,b)?max(g,b):r
expr1 g>max(r,b)?max(r,b):g
expr2 b>max(r,g)?max(r,g):b
name Expression1
xpos 1409
ypos -868
}
push $Na5efcc0
Dot {
name Dot9
xpos 1553
ypos -955
}
Merge2 {
inputs 2
operation difference
name Merge2
xpos 1519
ypos -868
}
Dot {
name Dot5
xpos 1553
ypos -417
}
set Na6107d0 [stack 0]
Dot {
name Dot6
xpos 1938
ypos -417
}
Shuffle {
red blue
green blue
alpha blue
name bbbb
xpos 1904
ypos -293
}
push $Na582d30
Dot {
name Dot72
xpos 604
ypos -865
}
set Na625c80 [stack 0]
HueCorrect {
hue {sat {}
  lum {}
  red {}
  green {}
  blue {}
  r_sup {}
  g_sup {}
  b_sup {}
  sat_thrsh {curve 0 0 0 x3.000000238 0 x4.000000477 0 0 x6.000000954 0}}
name HueCorrect1
xpos 570
ypos -730
}
push $Na625c80
Dot {
name Dot74
xpos 509
ypos -865
}
set Na63c9a0 [stack 0]
Dot {
name Dot111
xpos 383
ypos -865
}
Multiply {
value 0
name Multiply3
xpos 349
ypos -769
}
set Na645010 [stack 0]
Grade {
add {{min(parent.bias.r,parent.bias.b)-parent.bias.g i} {add.r i} {add.r i} 0}
black_clamp false
name Bias_Difference
xpos 349
ypos -710
}
set Na64e960 [stack 0]
push $Na625c80
Dot {
name Dot73
xpos 699
ypos -865
}
MergeExpression {
inputs 2
expr0 Br>(((Bg*greenAmt)+(Bb*blueAmt))*weight)-Ar?(((Bg*greenAmt)+(Bb*blueAmt))*weight)-Ar:Br
expr1 Bg>(((Br*redAmt)+(Bb*blueAmt))*weight)-Ag?(((Br*redAmt)+(Bb*blueAmt))*weight)-Ag:Bg
expr2 Bb>(((Br*redAmt)+(Bg*greenAmt))*weight)-Ab?(((Br*redAmt)+(Bg*greenAmt))*weight)-Ab:Bb
name Avg_suppress
xpos 665
ypos -710
addUserKnob {20 User}
addUserKnob {7 redAmt l Red R 0 2}
redAmt 1
addUserKnob {7 greenAmt l Green R 0 2}
greenAmt 1
addUserKnob {7 blueAmt l Blue R 0 2}
blueAmt 1
addUserKnob {7 weight l Weight}
weight 0.5
}
push $Na64e960
push $Na63c9a0
MergeExpression {
inputs 2
expr0 Br>max(Bg,Bb)-Ar?max(Bg,Bb)-Ar:Br
expr1 Bg>max(Br,Bb)-Ag?max(Br,Bb)-Ag:Bg
expr2 Bb>max(Br,Bg)-Ab?max(Br,Bg)-Ab:Bb
name max_supress
xpos 475
ypos -710
}
Switch {
inputs 3
which {{parent.suppressionMode i}}
name Switch1
xpos 570
ypos -589
}
push $Na5ebcd0
Merge2 {
inputs 2
operation difference
output rgb
name Merge6
xpos 1322
ypos -589
}
set Na67df40 [stack 0]
Dot {
name Dot76
xpos 1752
ypos -457
}
Shuffle {
red black
green black
alpha blue
name blue_screen
xpos 1718
ypos -388
}
set Na68f020 [stack 0]
Dot {
name Dot99
xpos 1828
ypos -383
}
Shuffle {
red blue
green blue
name bbb
xpos 1794
ypos -347
}
Switch {
inputs 2
which {{parent.max i}}
name Switch12
xpos 1794
ypos -293
}
Dot {
name Dot8
xpos 1828
ypos 36
}
push $Na6107d0
Shuffle {
red green
blue green
alpha green
name gggg
xpos 1519
ypos -317
}
push $Na67df40
Shuffle {
red black
blue black
alpha green
name green_screen
xpos 1322
ypos -393
}
set Na6c4f90 [stack 0]
Dot {
name Dot106
xpos 1432
ypos -388
}
Shuffle {
red green
blue green
name ggg
xpos 1398
ypos -360
}
Switch {
inputs 2
which {{parent.max i}}
name Switch2
xpos 1398
ypos -317
}
push $Na6107d0
Dot {
name Dot7
xpos 1155
ypos -417
}
Shuffle {
green red
blue red
alpha red
name rrrr
xpos 1121
ypos -327
}
push $Na67df40
Dot {
name Dot83
xpos 942
ypos -439
}
Shuffle {
green black
blue black
alpha red
name red_screen
xpos 908
ypos -392
}
set Na6faad0 [stack 0]
Dot {
name Dot97
xpos 1045
ypos -387
}
Shuffle {
green red
blue red
name rrr
xpos 1011
ypos -369
}
Switch {
inputs 2
which {{parent.max i}}
name Switch11
xpos 1011
ypos -327
}
Dot {
name Dot108
xpos 1045
ypos 36
}
Switch {
inputs 3
which {{parent.screenColour i}}
name Switch10
xpos 1398
ypos 31
}
Grade {
channels rgba
blackpoint {{parent.spillRangeLow i}}
whitepoint {{parent.spillRangeHigh i}}
white_clamp true
name Spill_Ranger
xpos 1398
ypos 105
}
FilterErode {
channels rgba
size {{parent.erode}}
name FilterErode1
xpos 1398
ypos 153
}
Dot {
name Dot105
xpos 1432
ypos 236
}
set Na744b60 [stack 0]
Merge2 {
inputs 2
operation mask
output rgb
name Merge9
xpos 1399
ypos 305
}
Dot {
name Dot87
xpos 1433
ypos 684
}
set Na723620 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge1
xpos 1399
ypos 717
}
Dot {
name Dot1
xpos 1136
ypos 722
}
Clamp {
name Clamp1
xpos 1102
ypos 766
}
Switch {
inputs 2
which {{parent.preserveAlpha i}}
name Switch3
xpos 1102
ypos 844
}
Expression {
expr3 a==0?0:a
name Expression7
xpos 1212
ypos 844
}
push $Na723620
push $Na5b5550
Dot {
name Dot88
xpos 2062
ypos 624
}
push $Na5932d0
push $Na744b60
Input {
inputs 0
name BG_Image
xpos 39
ypos -1308
number 2
}
Dot {
name Dot100
xpos 73
ypos -701
}
push $Na645010
Grade {
add {{parent.replaceColour.r} {parent.replaceColour.g} {parent.replaceColour.b} 0}
black_clamp false
name Replace_Colour1
xpos 158
ypos -762
}
Switch {
inputs 2
which {{parent.replaceImage i}}
name Switch9
xpos 158
ypos -706
}
Dot {
name Dot94
xpos 192
ypos 236
}
push $Na58b060
Dot {
name Dot98
xpos 1641
ypos -174
}
set Na7abaa0 [stack 0]
Expression {
expr0 max(r,g)
expr2 min(g,b)
name Expression11
xpos 1607
ypos -135
}
push $Na7abaa0
push $Na68f020
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
name Merge10
xpos 1718
ypos -179
}
Dissolve {
inputs 2
which {{parent.neutraliser i}}
name MixNeutralizer4
xpos 1717
ypos -142
}
Dot {
name Dot110
xpos 1752
ypos -5
}
push $Na58b060
Dot {
name Dot103
xpos 1246
ypos -174
}
set Na7d58b0 [stack 0]
Expression {
expr0 max(r,g)
expr2 max(g,b)
name Expression9
xpos 1212
ypos -127
}
push $Na7d58b0
push $Na6c4f90
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
name Merge17
xpos 1322
ypos -179
}
Dissolve {
inputs 2
which {{parent.neutraliser i}}
name MixNeutralizer3
xpos 1322
ypos -134
}
push $Na58b060
Dot {
name Dot92
xpos 836
ypos -174
}
set Na7faf90 [stack 0]
Expression {
expr0 min(r,g)
expr2 max(g,b)
name Expression12
xpos 802
ypos -118
}
push $Na7faf90
push $Na6faad0
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
name Merge12
xpos 908
ypos -179
}
Dissolve {
inputs 2
which {{parent.neutraliser i}}
name MixNeutralizer2
xpos 908
ypos -125
}
Dot {
name Dot109
xpos 942
ypos -5
}
Switch {
inputs 3
which {{parent.screenColour i}}
name Switch6
xpos 1322
ypos -10
}
Keymix {
inputs 3
bbox B
name Keymix1
xpos 1322
ypos 224
}
Dot {
name Dot113
xpos 1356
ypos 279
}
set Na8327a0 [stack 0]
push $Na58f1c0
Dot {
name Dot102
xpos 1035
ypos 277
}
set Na836970 [stack 0]
push $Na8327a0
Merge2 {
inputs 2
operation minus
name Isub5
xpos 1141
ypos 342
}
Grade {
channels all
name Grade2
label "clamp black"
xpos 1141
ypos 383
}
Saturation {
saturation 0
mode {{parent.DesatMethod}}
name Monochrome6
xpos 1141
ypos 451
}
Merge2 {
inputs 2
operation plus
name Merge23
xpos 1141
ypos 488
}
push $Na8327a0
push $Na836970
Merge2 {
inputs 2
operation minus
name Merge21
xpos 1001
ypos 371
}
Grade {
channels all
name Grade1
label "clamp black"
xpos 1001
ypos 399
}
Saturation {
saturation 0
mode {{parent.DesatMethod}}
name Monochrome7
xpos 1001
ypos 460
}
Merge2 {
inputs 2
operation minus
name Merge22
xpos 1001
ypos 488
}
Dot {
name Dot112
xpos 1035
ypos 538
}
push $Na8327a0
Dissolve {
inputs 2
which {{parent.restoreLuma i}}
name Dissolve2
selected true
xpos 1322
ypos 526
}
Keymix {
inputs 3
name Keymix
xpos 1322
ypos 612
}
Switch {
inputs 2
which {{parent.matteView i}}
name Switch8
xpos 1322
ypos 679
}
HSVTool {
huerotation {{-HueIn.huerotation i}}
brtsrcs {0 10000}
output none
name HueOut
xpos 1322
ypos 757
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos 1322
ypos 837
}
Output {
name Output1
xpos 1322
ypos 937
}
end_group
Switch {
inputs 9
which 1
name Switch1
selected true
xpos -4796
ypos -631
}
